#!/usr/bin/env sh
# shellcheck shell=sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202305011506-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  WTFPL
# @@ReadME           :  setup_jekyll --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Monday, May 01, 2023 15:06 EDT
# @@File             :  setup_jekyll
# @@Description      :  Ruby Version Manager installer
# @@Changelog        :  New script
# @@TODO             :  Better documentation
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  shell/sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# shellcheck disable=SC2317
# shellcheck disable=SC2120
# shellcheck disable=SC2155
# shellcheck disable=SC2199
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0" 2>/dev/null)"
VERSION="202305011506-git"
RUN_USER="$USER"
SET_UID="$(id -u)"
SCRIPT_SRC_DIR="$(cd "$(dirname "$0")" && pwd)"
SETUP_JEKYLL_CWD="$(realpath "$PWD")"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# colorization
if [ "$SHOW_RAW" = "true" ]; then
  __printf_color() { printf '%b' "$1\n" | tr -d '\t' | sed '/^%b$/d;s,\x1B\[ 0-9;]*[a-zA-Z],,g'; }
else
  __printf_color() { { [ -z "$2" ] || DEFAULT_COLOR=$2; } && printf "%b" "$(tput setaf "$DEFAULT_COLOR" 2>/dev/null)" "$1\n" "$(tput sgr0 2>/dev/null)"; }
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for command
__cmd_exists() { which $1 >/dev/null 2>&1 || return 1; }
__function_exists() { builtin type $1 >/dev/null 2>&1 || return 1; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# custom functions

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Define variables
DEFAULT_COLOR="254"
SETUP_JEKYLL_EXIT_STATUS=0
SETUP_JEKYLL_VERSION="3.9.3"
SETUP_RVM_LOG_DIR="${LOG_DIR:-$HOME/.local/log/$APPNAME}"
SETUP_RVM_LOG_FILE="$SETUP_RVM_LOG_DIR/$$.log"
[ -d "$SETUP_RVM_LOG_DIR" ] || mkdir -p "$SETUP_RVM_LOG_DIR"

[ -n "$GEM_HOME" ]
[ -n "$rvm_path" ] || rvm_path="$HOME/.local/share/rvm"
if [ -f "$rvm_path/scripts/rvm" ]; then
  . "$rvm_path/scripts/rvm"
  rvm reload >>"$SETUP_RVM_LOG_FILE" 2>&1
  rvm use default >>"$SETUP_RVM_LOG_FILE" 2>&1
  type rvm >>"$SETUP_RVM_LOG_FILE" 2>&1 && __printf_color "Using rvm to install jekyll"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
__printf_color "Setting log file to $SETUP_RVM_LOG_FILE"
if ! __cmd_exists bundler; then
  __printf_color "Installing bundler" 5
  gem install bundler >>"$SETUP_RVM_LOG_FILE" 2>&1
fi
__printf_color "Installing jekyll $SETUP_JEKYLL_VERSION" 4
gem install jekyll -v $SETUP_JEKYLL_VERSION >>"$SETUP_RVM_LOG_FILE" 2>&1
gem install casjaysdev-jekyll-theme >>"$SETUP_RVM_LOG_FILE" 2>&1
bundle update >>"$SETUP_RVM_LOG_FILE" 2>&1
if builtin type -P jekyll 2>&1 | grep -q "$HOME" >>"$SETUP_RVM_LOG_FILE" 2>&1; then
  version="$(jekyll -v 2>/dev/null | grep '[0-9]' | sed 's|[jJ]ekyll ||g')"
  __printf_color "Finished installing jekyll $version" 6
  SETUP_JEKYLL_EXIT_STATUS=0
else
  __printf_color "Installation of jekyll has failed" 1 >&2
  SETUP_JEKYLL_EXIT_STATUS=1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $SETUP_JEKYLL_EXIT_STATUS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ex: ts=2 sw=2 et filetype=sh
